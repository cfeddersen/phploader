{"majorversion": 2, "filemap": {"loader.php": {"classlist": ["PHP.YAHOO_util_Loader"], "name": "loader.php", "module": "phploader"}}, "modules": {"phploader": {"description": "Used to specify JavaScript and CSS module requirements.  It maintains a dependency\ntree for these modules so when a module is requested, all of the other modules it \ndepends on are included as well.  By default, the YUI Library is configured, and \nother modules and their dependencies can be added via PHP.", "submodules": [], "classlist": ["PHP.YAHOO_util_Loader"], "filelist": ["loader.php"], "subdata": {}, "name": "phploader"}}, "classmap": {"PHP.YAHOO_util_Loader": {"name": "PHP.YAHOO_util_Loader", "constructors": [{"params": [{"type": "string", "name": "yuiVersion", "description": " Defines which version of YUI metadata to load"}, {"type": "string", "name": "cacheKey", "description": " Unique APC cache key.  This is combined with the YUI base\nso that updates to YUI will force a new cache entry.  However, if your custom config \nchanges, this key should be changed (otherwise the old values will be used until the cache expires)."}, {"type": "array", "name": "modules", "description": " A list of custom modules"}, {"type": "boolean", "name": "noYUI", "description": " Pass true if you do not want the YUI metadata"}], "description": "The YAHOO_util_Loader class constructor"}], "namespace": "PHP", "module": "phploader", "methods": {"load": {"params": [{"type": "", "name": "string", "description": " $varname [, string $... ] List of component names"}], "description": "Used to load YUI and/or custom components"}, "getRaw": {"return": {"type": "string", "description": "raw source"}, "params": [{"type": "string", "name": "name", "description": " The module name you wish to fetch the source from"}], "description": "Retrieve the raw source contents for a given module name"}, "getRemoteContent": {"return": {"type": "", "description": "raw source"}, "params": [{"type": "string", "name": "url", "description": " URL to fetch data from"}], "description": "Retrieve the contents of a remote resource"}, "getLoadedModules": {"return": {"type": "array", "description": ""}, "description": "Identifies what module(s) have been loaded via the load method and/or marked as loaded via the setLoaded method"}, "overrideBase": {"params": [{"type": "string", "name": "base", "description": " Base path (e.g.) 2.6.0/build"}, {"type": "array", "name": "modules", "description": " Module names of which to override base"}], "description": "Used to override the base dir for specific set of modules (Note: not supported when using the combo service)"}, "raw": {"return": {"type": "string", "description": "Returns the raw JavaScript and/or CSS code inline without the actual style tags"}, "params": [{"type": "string", "name": "moduleType", "description": ""}, {"type": "boolean", "name": "allowRollups", "description": ""}, {"type": "boolean", "name": "skipSort", "description": ""}], "description": "Used to produce the raw Javacript and CSS code inline without the actual script or style tags", "guessedname": "moduleType", "guessedtype": "function"}, "getLink": {"return": {"type": "string", "description": "link or script include"}, "params": [{"type": "string", "name": "name", "description": " The module name to fetch the include for"}, {"type": "string", "name": "type", "description": " Resource type (i.e.) YUI_JS or YUI_CSS"}], "description": "Retrieve the link or script include for a given module name and resource type"}, "getProvides": {"return": {"type": "array", "description": ""}, "params": [{"type": "string", "name": "name", "description": " Module name"}], "description": "Identifies what module(s) are provided by a given module name (e.g.) yaho-dom-event provides yahoo, dom, and event"}, "script_json": {"return": {"type": "string", "description": "Returns a JSON object containing urls for each JavaScript component"}, "description": "Used to fetch a JSON object with the required JavaScript components"}, "script": {"return": {"type": "string", "description": ""}, "description": "Used to output each of the required script tags"}, "css_data": {"return": {"type": "array", "description": "Returns an array of data about each of the identified JavaScript components"}, "description": "Used to fetch an array of the required CSS components"}, "getLoadedModulesAsJSON": {"return": {"type": "json", "description": ""}, "description": "Identifies what module(s) have been loaded via the load method and/or marked as loaded via the setLoaded method"}, "addToCombo": {"params": [{"type": "string", "name": "name", "description": " The module name to add"}, {"type": "string", "name": "type", "description": " Resource type (i.e.) YUI_JS or YUI_CSS"}], "description": "Adds a module the combo collection for a specified resource type"}, "json": {"return": {"type": "string", "description": "Returns a JSON object with the required JavaScript and CSS components"}, "params": [{"type": "string", "name": "moduleType", "description": ""}, {"type": "boolean", "name": "allowRollups", "description": ""}, {"type": "boolean", "name": "skipSort", "description": ""}, {"type": "boolean", "name": "full", "description": ""}], "description": "Used to fetch a JSON object with the required JavaScript and CSS components", "guessedname": "moduleType", "guessedtype": "function"}, "getContent": {"return": {"type": "string", "description": "style or script node with embedded source"}, "params": [{"type": "string", "name": "name", "description": " The module name to fetch the source from"}, {"type": "string", "name": "type", "description": " Resource type (i.e.) YUI_JS or YUI_CSS"}], "description": "Retrieve the style or script node with embedded source for a given module name and resource type"}, "css": {"return": {"type": "string", "description": ""}, "description": "Used to output each of the required link tags"}, "getUrl": {"params": [{"type": "string", "name": "name", "description": " YUI component name"}], "description": "Retrieve the calculated url for the component in question"}, "getComboLink": {"return": {"type": "string", "description": "link or script include"}, "params": [{"type": "string", "name": "type", "description": " Resource type (i.e.) YUI_JS or YUI_CSS"}], "description": "Retrieves the combo link or script include for the currently loaded modules of a specific resource type"}, "css_json": {"return": {"type": "string", "description": "Returns a JSON object containing urls for each CSS component"}, "description": "Used to fetch a JSON object with the required CSS components"}, "tags": {"return": {"type": "string", "description": ""}, "params": [{"type": "string", "name": "moduleType", "description": " Type of html tag to return (i.e.) js or css.  Default is both."}, {"type": "boolean", "name": "skipSort", "description": ""}], "description": "Used to output each of the required html tags (i.e.) script or link", "guessedname": "moduleType", "guessedtype": "function"}, "css_raw": {"return": {"type": "string", "description": "Returns the raw CSS code inline without the actual style tags"}, "description": "Used to produce the raw CSS code inline without the actual style tags"}, "script_embed": {"return": {"type": "string", "description": "Returns the script tag(s) with the JavaScript inline"}, "description": "Used to embed the raw JavaScript inline"}, "script_raw": {"return": {"type": "string", "description": "Returns the raw JavaScript code inline without the actual script tags"}, "description": "Used to produce the raw JavaScript code inline without the actual script tags"}, "data": {"return": {"type": "string", "description": ""}, "params": [{"type": "string", "name": "moduleType", "description": " Type of html tag to return (i.e.) js or css.  Default is both."}, {"type": "boolean", "name": "allowRollups", "description": ""}, {"type": "boolean", "name": "skipSort", "description": ""}], "description": "Used to output an Array which contains data about the required JavaScript & CSS components", "guessedname": "moduleType", "guessedtype": "function"}, "canJSON": {"return": {"type": "", "description": "boolean"}, "description": "Detects if environment supports JSON encode/decode"}, "getAllDependencies": {"return": {"type": "array", "description": ""}, "params": [{"type": "string", "name": "mname", "description": " Module name"}, {"type": "boolean", "name": "loadOptional", "description": " Load optional dependencies"}, {"type": "array", "name": "completed", "description": ""}], "description": "Identify dependencies for a give module name", "guessedname": "loadOptional", "guessedtype": "function"}, "css_embed": {"return": {"type": "string", "description": "(e.g.) Returns the style tag(s) with the CSS inline"}, "description": "Used to embed the raw CSS"}, "setLoaded": {"params": [{"type": "", "name": "string", "description": " $varname [, string $... ] List of module names"}], "description": "Used to specify modules that are already on the page that should not be loaded again"}, "embed": {"return": {"type": "string", "description": "Returns the style tag(s) with the CSS inline and/or the script tag(s) with the JavaScript inline"}, "params": [{"type": "string", "name": "moduleType", "description": " Type of html tag to return (i.e.) js or css.  Default is both."}, {"type": "boolean", "name": "skipSort", "description": ""}], "description": "Used to output each of the required html tags inline (i.e.) script and/or style", "guessedname": "moduleType", "guessedtype": "function"}, "script_data": {"return": {"type": "array", "description": "Returns an array of data about each of the identified JavaScript components"}, "description": "Used to fetch an array of the required JavaScript components"}}, "file": "loader.php", "shortname": "YAHOO_util_Loader", "properties": {"comboBase": {"default": "http://yui.yahooapis.com/combo?", "type": "string", "description": "The base path to the combo service.  Uses the Yahoo! CDN service by default.\nYou do not have to set this property to use the combine option. YUI PHP Loader ships \nwith an intrinsic, lightweight combo-handler as well (see combo.php).", "guessedname": "comboBase", "guessedtype": "property"}, "allowRollups": {"default": "true", "type": "boolean", "description": "Should we allow rollups", "guessedname": "allowRollups", "guessedtype": "property"}, "loadOptional": {"default": "false", "type": "boolean", "description": "Whether or not to load optional dependencies for the requested modules", "guessedname": "loadOptional", "guessedtype": "property"}, "filterList": {"default": "null", "type": "array", "description": "A list of modules to apply the filter to.  If not supplied, all\nmodules will have any defined filters applied.  Tip: Useful for debugging.", "guessedname": "filterList", "guessedtype": "property"}, "base": {"default": "http://yui.yahooapis.com/[YUI VERSION]/build/", "type": "string", "description": "The base directory", "guessedname": "base", "guessedtype": "property"}, "combine": {"default": "false", "type": "boolean", "description": "Combined into a single request using the combo service to pontentially reduce the number of \nhttp requests required.  This option is not supported when loading custom modules.", "guessedname": "combine", "guessedtype": "property"}, "rollupsToTop": {"default": "false", "type": "boolean", "description": "Force rollup modules to be sorted as moved to the top of\nthe stack when performing an automatic rollup.  This has a very small performance consequence.", "guessedname": "rollupsToTop", "guessedtype": "property"}}, "description": "The YUI PHP loader base class which provides dynamic server-side loading for YUI"}}, "version": "1.0.0beta", "namespaces": ["PHP"]}